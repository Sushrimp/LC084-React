{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\- SCRIPT\\\\Post Training\\\\ReactJS\\\\qualif-lc084\\\\src\\\\pages\\\\Fav.jsx\",\n  _s = $RefreshSig$();\nimport { GET_ANIME_BY_IDS } from \"../lib/queries/GetAnimeByIDS\";\nimport { useQuery } from \"@apollo/client\";\nimport { CardContainer } from \"../Components/card/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AnimeFav() {\n  _s();\n  let favAnimeIDs = JSON.parse(localStorage.getItem(\"favAnime\")).map(id => parseInt(id, 10));\n  let length = favAnimeIDs.length;\n  let check = favAnimeIDs;\n  let {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ANIME_BY_IDS, {\n    variables: {\n      ids: favAnimeIDs,\n      perPage: length\n    }\n  });\n  console.log(favAnimeIDs);\n  console.log(data.Page.media);\n  console.log(\"anjay\");\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 29\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 24\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Error : \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 22\n  }, this);\n  let handleClear = () => {\n    localStorage.clear();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: favAnimeIDs ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"1fr 1fr\",\n          backgroundColor: \"#dedbd2\"\n        },\n        children: data.Media.map((media, index) => {\n          return /*#__PURE__*/_jsxDEV(CardContainer, {\n            media: media\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClear,\n        style: {\n          border: \"none\",\n          backgroundColor: \"#FF3123\",\n          borderRadius: \"5px\"\n        },\n        children: \"Clear all favourite Anime\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: \"No favourite anime\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(AnimeFav, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = AnimeFav;\nvar _c;\n$RefreshReg$(_c, \"AnimeFav\");","map":{"version":3,"names":["GET_ANIME_BY_IDS","useQuery","CardContainer","jsxDEV","_jsxDEV","AnimeFav","_s","favAnimeIDs","JSON","parse","localStorage","getItem","map","id","parseInt","length","check","loading","error","data","variables","ids","perPage","console","log","Page","media","children","fileName","_jsxFileName","lineNumber","columnNumber","message","handleClear","clear","style","display","gridTemplateColumns","backgroundColor","Media","index","onClick","border","borderRadius","flexDirection","alignItems","_c","$RefreshReg$"],"sources":["D:/Programming/- SCRIPT/Post Training/ReactJS/qualif-lc084/src/pages/Fav.jsx"],"sourcesContent":["import { GET_ANIME_BY_IDS } from \"../lib/queries/GetAnimeByIDS\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { CardContainer } from \"../Components/card/Card\";\r\n\r\nexport default function AnimeFav(){\r\n\r\n    let favAnimeIDs = JSON.parse(localStorage.getItem(\"favAnime\")).map(id => parseInt(id, 10));\r\n    let length = favAnimeIDs.length;\r\n    let check = favAnimeIDs\r\n\r\n    let { loading, error, data } = useQuery(GET_ANIME_BY_IDS, {\r\n        variables: {\r\n        ids: favAnimeIDs,\r\n        perPage: length,\r\n        },\r\n    });\r\n\r\n    console.log(favAnimeIDs);\r\n    console.log(data.Page.media);\r\n    console.log(\"anjay\");\r\n\r\n    if(loading) return <div><h1>Loading...</h1></div>\r\n    if(error) return <div><h1>Error : {error.message}</h1></div>\r\n\r\n    let handleClear = () => {\r\n        localStorage.clear();\r\n    }\r\n    \r\n\r\n      return (\r\n        <div>\r\n        {\r\n            favAnimeIDs ? (\r\n                <div>\r\n                    <div style={{\r\n                        display: \"grid\",\r\n                        gridTemplateColumns: \"1fr 1fr\",\r\n                        backgroundColor: \"#dedbd2\",\r\n                    }}>\r\n                        {data.Media.map((media, index) => {\r\n                        return (\r\n                            <CardContainer media={media} key={index}/>    \r\n                        )\r\n                        })}\r\n                    </div>\r\n                    \r\n                    <button onClick={handleClear} style={{\r\n                                border: \"none\", \r\n                                backgroundColor: \"#FF3123\",\r\n                                borderRadius: \"5px\",\r\n                    }}>\r\n                        Clear all favourite Anime\r\n                    </button>\r\n                    \r\n                </div>\r\n            ) : (\r\n              <div style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n              }}>\r\n                No favourite anime\r\n              </div>\r\n            )\r\n          }\r\n        </div>\r\n      );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}