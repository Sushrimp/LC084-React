{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\- SCRIPT\\\\Post Training\\\\ReactJS\\\\qualif-lc084\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@apollo/client\";\nimport { GET_ALL_ANIMES } from \"../lib/queries/GetAllAnime\";\nimport { useParams } from \"react-router-dom\";\nimport { CardContainer } from \"../Components/card/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const pageId = id ? parseInt(id) : 1;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ALL_ANIMES, {\n    variables: {\n      perPage: 50,\n      page: pageId\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 29\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 24\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Error : \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 22\n  }, this);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"grid\",\n      gridTemplateColumns: \"1fr 1fr\",\n      backgroundColor: \"#dedbd2\"\n      // rowGap: \"1rem\",\n    },\n    children: data.Page.media.map((media, index) => {\n      return /*#__PURE__*/_jsxDEV(CardContainer, {\n        media: media\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"ewfendcS3PSa2ath3oPz+m0pI8Y=\", false, function () {\n  return [useParams, useQuery];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useQuery","GET_ALL_ANIMES","useParams","CardContainer","jsxDEV","_jsxDEV","Home","_s","id","pageId","parseInt","loading","error","data","variables","perPage","page","children","fileName","_jsxFileName","lineNumber","columnNumber","message","console","log","style","display","gridTemplateColumns","backgroundColor","Page","media","map","index","_c","$RefreshReg$"],"sources":["D:/Programming/- SCRIPT/Post Training/ReactJS/qualif-lc084/src/pages/Home.jsx"],"sourcesContent":["import { useQuery } from \"@apollo/client\";\r\nimport { GET_ALL_ANIMES } from \"../lib/queries/GetAllAnime\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { CardContainer } from \"../Components/card/Card\";\r\n\r\nexport default function Home(){\r\n    const { id } = useParams();\r\n    const pageId = id ? parseInt(id) : 1;\r\n\r\n    const { loading, error, data } = useQuery(GET_ALL_ANIMES, {\r\n        variables: {\r\n        perPage: 50,\r\n        page: pageId,\r\n        },\r\n    });\r\n\r\n    if(loading) return <div><h1>Loading...</h1></div>\r\n    if(error) return <div><h1>Error : {error.message}</h1></div>\r\n\r\n    console.log(data);\r\n\r\n    \r\n\r\n    return (\r\n        <div \r\n        style = {{\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"1fr 1fr\",\r\n            backgroundColor: \"#dedbd2\" ,\r\n            // rowGap: \"1rem\",\r\n        }}    \r\n        >\r\n        {\r\n            data.Page.media.map((media, index) => {\r\n                return (\r\n                    <CardContainer media={media}/>    \r\n                )\r\n            })\r\n        }\r\n        </div>\r\n    );\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,aAAa,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,eAAe,SAASC,IAAIA,CAAA,EAAE;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAMO,MAAM,GAAGD,EAAE,GAAGE,QAAQ,CAACF,EAAE,CAAC,GAAG,CAAC;EAEpC,MAAM;IAAEG,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGb,QAAQ,CAACC,cAAc,EAAE;IACtDa,SAAS,EAAE;MACXC,OAAO,EAAE,EAAE;MACXC,IAAI,EAAEP;IACN;EACJ,CAAC,CAAC;EAEF,IAAGE,OAAO,EAAE,oBAAON,OAAA;IAAAY,QAAA,eAAKZ,OAAA;MAAAY,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACjD,IAAGT,KAAK,EAAE,oBAAOP,OAAA;IAAAY,QAAA,eAAKZ,OAAA;MAAAY,QAAA,GAAI,UAAQ,EAACL,KAAK,CAACU,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE5DE,OAAO,CAACC,GAAG,CAACX,IAAI,CAAC;EAIjB,oBACIR,OAAA;IACAoB,KAAK,EAAI;MACLC,OAAO,EAAE,MAAM;MACfC,mBAAmB,EAAE,SAAS;MAC9BC,eAAe,EAAE;MACjB;IACJ,CAAE;IAAAX,QAAA,EAGEJ,IAAI,CAACgB,IAAI,CAACC,KAAK,CAACC,GAAG,CAAC,CAACD,KAAK,EAAEE,KAAK,KAAK;MAClC,oBACI3B,OAAA,CAACF,aAAa;QAAC2B,KAAK,EAAEA;MAAM;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAEtC,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEd;AAACd,EAAA,CApCuBD,IAAI;EAAA,QACTJ,SAAS,EAGSF,QAAQ;AAAA;AAAAiC,EAAA,GAJrB3B,IAAI;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}