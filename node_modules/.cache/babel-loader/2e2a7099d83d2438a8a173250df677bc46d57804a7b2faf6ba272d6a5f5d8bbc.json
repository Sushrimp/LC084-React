{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\- SCRIPT\\\\Post Training\\\\ReactJS\\\\qualif-lc084\\\\src\\\\pages\\\\Search.jsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@apollo/client\";\nimport { GET_ALL_ANIMES } from \"../lib/queries/GetAllAnime\";\nimport { useParams } from \"react-router-dom\";\nimport { CardContainer } from \"../Components/card/Card\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const pageId = id ? parseInt(id) : 1;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ALL_ANIMES, {\n    variables: {\n      perPage: 50,\n      page: pageId\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"90vh\",\n      display: \"flex\",\n      textAlign: \"center\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      fontSize: \"large\",\n      backgroundColor: \"#dedbd2\",\n      color: \"#3a5a40\"\n    },\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Error : \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 22\n  }, this);\n\n  // console.log(data);\n\n  // const [searchTerm, setSearchTerm] = useState(\"\");\n  // const [searchResults, setSearchResults] = useState([]);\n\n  // handleSearch = (event) => {\n  //     const searchTerm = event.target.value;\n  //     setSearchTerm(searchTerm);\n  // }\n\n  // // perform search logic here, and update searchResults state accordingly\n  // const newSearchResults = performSearch(searchTerm);\n  // setSearchResults(newSearchResults);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"#dedbd2\",\n      justifyContent: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"1fr 1fr\"\n      },\n      children: data.Page.media.map((media, index) => {\n        return /*#__PURE__*/_jsxDEV(CardContainer, {\n          media: media\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(Search, \"ewfendcS3PSa2ath3oPz+m0pI8Y=\", false, function () {\n  return [useParams, useQuery];\n});\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useQuery","GET_ALL_ANIMES","useParams","CardContainer","useState","jsxDEV","_jsxDEV","Search","_s","id","pageId","parseInt","loading","error","data","variables","perPage","page","style","height","display","textAlign","alignItems","justifyContent","fontSize","backgroundColor","color","children","fileName","_jsxFileName","lineNumber","columnNumber","message","type","value","gridTemplateColumns","Page","media","map","index","_c","$RefreshReg$"],"sources":["D:/Programming/- SCRIPT/Post Training/ReactJS/qualif-lc084/src/pages/Search.jsx"],"sourcesContent":["import { useQuery } from \"@apollo/client\";\r\nimport { GET_ALL_ANIMES } from \"../lib/queries/GetAllAnime\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { CardContainer } from \"../Components/card/Card\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Search(){\r\n    const { id } = useParams();\r\n    const pageId = id ? parseInt(id) : 1;\r\n\r\n    const { loading, error, data } = useQuery(GET_ALL_ANIMES, {\r\n        variables: {\r\n        perPage: 50,\r\n        page: pageId,\r\n        },\r\n    });\r\n\r\n    if(loading) return (\r\n        <div style={{\r\n            height: \"90vh\",\r\n            display: \"flex\",\r\n            textAlign: \"center\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            fontSize: \"large\",\r\n            backgroundColor: \"#dedbd2\",\r\n            color: \"#3a5a40\"\r\n        }}>\r\n            Loading...\r\n        </div>\r\n        );\r\n    if(error) return <div><h1>Error : {error.message}</h1></div>\r\n\r\n    // console.log(data);\r\n\r\n    // const [searchTerm, setSearchTerm] = useState(\"\");\r\n    // const [searchResults, setSearchResults] = useState([]);\r\n\r\n    // handleSearch = (event) => {\r\n    //     const searchTerm = event.target.value;\r\n    //     setSearchTerm(searchTerm);\r\n    // }\r\n\r\n    // // perform search logic here, and update searchResults state accordingly\r\n    // const newSearchResults = performSearch(searchTerm);\r\n    // setSearchResults(newSearchResults);\r\n\r\n    return (\r\n        <div style = {{\r\n            backgroundColor: \"#dedbd2\" ,\r\n            justifyContent: \"center\",\r\n            \r\n        }}\r\n        >\r\n            <input type=\"text\" value=\"\" />\r\n\r\n            <div \r\n            style = {{\r\n                display: \"grid\",\r\n                gridTemplateColumns: \"1fr 1fr\",\r\n            }}    \r\n            >\r\n                \r\n            {\r\n                data.Page.media.map((media, index) => {\r\n                    return (\r\n                        <CardContainer media={media}/>    \r\n                    )\r\n                })\r\n            }\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,aAAa,QAAQ,yBAAyB;AACvD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,MAAMA,CAAA,EAAE;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC1B,MAAMQ,MAAM,GAAGD,EAAE,GAAGE,QAAQ,CAACF,EAAE,CAAC,GAAG,CAAC;EAEpC,MAAM;IAAEG,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGd,QAAQ,CAACC,cAAc,EAAE;IACtDc,SAAS,EAAE;MACXC,OAAO,EAAE,EAAE;MACXC,IAAI,EAAEP;IACN;EACJ,CAAC,CAAC;EAEF,IAAGE,OAAO,EAAE,oBACRN,OAAA;IAAKY,KAAK,EAAE;MACRC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE,MAAM;MACfC,SAAS,EAAE,QAAQ;MACnBC,UAAU,EAAE,QAAQ;MACpBC,cAAc,EAAE,QAAQ;MACxBC,QAAQ,EAAE,OAAO;MACjBC,eAAe,EAAE,SAAS;MAC1BC,KAAK,EAAE;IACX,CAAE;IAAAC,QAAA,EAAC;EAEH;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEV,IAAGlB,KAAK,EAAE,oBAAOP,OAAA;IAAAqB,QAAA,eAAKrB,OAAA;MAAAqB,QAAA,GAAI,UAAQ,EAACd,KAAK,CAACmB,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;;EAE5D;;EAEA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,oBACIzB,OAAA;IAAKY,KAAK,EAAI;MACVO,eAAe,EAAE,SAAS;MAC1BF,cAAc,EAAE;IAEpB,CAAE;IAAAI,QAAA,gBAEErB,OAAA;MAAO2B,IAAI,EAAC,MAAM;MAACC,KAAK,EAAC;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE9BzB,OAAA;MACAY,KAAK,EAAI;QACLE,OAAO,EAAE,MAAM;QACfe,mBAAmB,EAAE;MACzB,CAAE;MAAAR,QAAA,EAIEb,IAAI,CAACsB,IAAI,CAACC,KAAK,CAACC,GAAG,CAAC,CAACD,KAAK,EAAEE,KAAK,KAAK;QAClC,oBACIjC,OAAA,CAACH,aAAa;UAACkC,KAAK,EAAEA;QAAM;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAEtC,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACvB,EAAA,CAnEuBD,MAAM;EAAA,QACXL,SAAS,EAGSF,QAAQ;AAAA;AAAAwC,EAAA,GAJrBjC,MAAM;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}