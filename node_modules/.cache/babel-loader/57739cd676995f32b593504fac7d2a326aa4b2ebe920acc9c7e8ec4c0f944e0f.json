{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\- SCRIPT\\\\Post Training\\\\ReactJS\\\\qualif-lc084\\\\src\\\\pages\\\\Fav.jsx\",\n  _s = $RefreshSig$();\nimport { GET_ANIME_BY_IDS } from \"../lib/queries/GetAnimeByIDS\";\nimport { useQuery } from \"@apollo/client\";\nimport { CardContainer } from \"../Components/card/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AnimeFav() {\n  _s();\n  let favAnimeIDs = JSON.parse(localStorage.getItem(\"favAnime\")).map(id => parseInt(id, 10));\n  let length = favAnimeIDs.length;\n  let {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ANIME_BY_IDS, {\n    variables: {\n      ids: favAnimeIDs,\n      perPage: length\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 29\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 24\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Error : \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 22\n  }, this);\n\n  // console.log(favAnimeIDs);\n  // console.log(data.Page.media);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"grid\",\n      gridTemplateColumns: \"1fr 1fr\",\n      backgroundColor: \"#dedbd2\"\n      // rowGap: \"1rem\",\n    },\n    children: data.Page.media.map((media, index) => {\n      return /*#__PURE__*/_jsxDEV(CardContainer, {\n        media: media\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(AnimeFav, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = AnimeFav;\nvar _c;\n$RefreshReg$(_c, \"AnimeFav\");","map":{"version":3,"names":["GET_ANIME_BY_IDS","useQuery","CardContainer","jsxDEV","_jsxDEV","AnimeFav","_s","favAnimeIDs","JSON","parse","localStorage","getItem","map","id","parseInt","length","loading","error","data","variables","ids","perPage","children","fileName","_jsxFileName","lineNumber","columnNumber","message","style","display","gridTemplateColumns","backgroundColor","Page","media","index","_c","$RefreshReg$"],"sources":["D:/Programming/- SCRIPT/Post Training/ReactJS/qualif-lc084/src/pages/Fav.jsx"],"sourcesContent":["import { GET_ANIME_BY_IDS } from \"../lib/queries/GetAnimeByIDS\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { CardContainer } from \"../Components/card/Card\";\r\n\r\nexport default function AnimeFav(){\r\n\r\n    let favAnimeIDs = JSON.parse(localStorage.getItem(\"favAnime\")).map(id => parseInt(id, 10));\r\n    let length = favAnimeIDs.length;\r\n    let { loading, error, data } = useQuery(GET_ANIME_BY_IDS, {\r\n        variables: {\r\n        ids: favAnimeIDs,\r\n        perPage: length,\r\n        },\r\n    });\r\n\r\n    if(loading) return <div><h1>Loading...</h1></div>\r\n    if(error) return <div><h1>Error : {error.message}</h1></div>\r\n\r\n    // console.log(favAnimeIDs);\r\n    // console.log(data.Page.media);\r\n\r\n      return (\r\n        <div \r\n        style = {{\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"1fr 1fr\",\r\n            backgroundColor: \"#dedbd2\" ,\r\n            // rowGap: \"1rem\",\r\n        }}    \r\n        >\r\n        {\r\n            data.Page.media.map((media, index) => {\r\n                return (\r\n                    <CardContainer media={media}/>    \r\n                )\r\n            })\r\n        }\r\n        </div>\r\n      );\r\n}"],"mappings":";;AAAA,SAASA,gBAAgB,QAAQ,8BAA8B;AAC/D,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,aAAa,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,eAAe,SAASC,QAAQA,CAAA,EAAE;EAAAC,EAAA;EAE9B,IAAIC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAACC,GAAG,CAACC,EAAE,IAAIC,QAAQ,CAACD,EAAE,EAAE,EAAE,CAAC,CAAC;EAC1F,IAAIE,MAAM,GAAGR,WAAW,CAACQ,MAAM;EAC/B,IAAI;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGjB,QAAQ,CAACD,gBAAgB,EAAE;IACtDmB,SAAS,EAAE;MACXC,GAAG,EAAEb,WAAW;MAChBc,OAAO,EAAEN;IACT;EACJ,CAAC,CAAC;EAEF,IAAGC,OAAO,EAAE,oBAAOZ,OAAA;IAAAkB,QAAA,eAAKlB,OAAA;MAAAkB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACjD,IAAGT,KAAK,EAAE,oBAAOb,OAAA;IAAAkB,QAAA,eAAKlB,OAAA;MAAAkB,QAAA,GAAI,UAAQ,EAACL,KAAK,CAACU,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;;EAE5D;EACA;;EAEE,oBACEtB,OAAA;IACAwB,KAAK,EAAI;MACLC,OAAO,EAAE,MAAM;MACfC,mBAAmB,EAAE,SAAS;MAC9BC,eAAe,EAAE;MACjB;IACJ,CAAE;IAAAT,QAAA,EAGEJ,IAAI,CAACc,IAAI,CAACC,KAAK,CAACrB,GAAG,CAAC,CAACqB,KAAK,EAAEC,KAAK,KAAK;MAClC,oBACI9B,OAAA,CAACF,aAAa;QAAC+B,KAAK,EAAEA;MAAM;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAEtC,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEd;AAACpB,EAAA,CAnCuBD,QAAQ;EAAA,QAIGJ,QAAQ;AAAA;AAAAkC,EAAA,GAJnB9B,QAAQ;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}